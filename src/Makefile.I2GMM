#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++ -std=c++11 -pthread
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
DBGFLAGS      = -g
CPPFLAGS      = -O2 -frtti -fexceptions $(PICFLAGS) $(GENFLAGS)  -D_REENTRANT
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.ASPIRE
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)ASPIRE$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) 
OBJS          = i2gmm$(OBJEXT) Buffer$(OBJEXT) Customer$(OBJEXT) DataSet$(OBJEXT) Dish$(OBJEXT) Global$(OBJEXT) Matrix$(OBJEXT) Normal$(OBJEXT) Restaurant$(OBJEXT) Stut$(OBJEXT) Table$(OBJEXT) ThreadPool$(OBJEXT) util$(OBJEXT) Vector$(OBJEXT)
SRC           = i2gmm.cpp Customer.cpp DataSet.cpp Dish.cpp Restaurant.cpp Table.cpp 
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

i2gmm$(OBJEXT): i2gmm.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) i2gmm.cpp


Customer$(OBJEXT): Customer.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Customer.cpp

DataSet$(OBJEXT): DataSet.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DataSet.cpp

Dish$(OBJEXT): Dish.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Dish.cpp




Restaurant$(OBJEXT): Restaurant.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Restaurant.cpp


Table$(OBJEXT): Table.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Table.cpp



clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@$(TOUCH) $(DEPENDENCIES)

depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++ -std=c++11 -pthread
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
DBGFLAGS      = -g
CPPFLAGS      = -O2 -frtti -fexceptions $(PICFLAGS) $(GENFLAGS)  -D_REENTRANT
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.ASPIRE
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)ASPIRE$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) 
OBJS          = i2gmm$(OBJEXT) Buffer$(OBJEXT) Customer$(OBJEXT) DataSet$(OBJEXT) Dish$(OBJEXT) Global$(OBJEXT) Matrix$(OBJEXT) Normal$(OBJEXT) Restaurant$(OBJEXT) Stut$(OBJEXT) Table$(OBJEXT) ThreadPool$(OBJEXT) util$(OBJEXT) Vector$(OBJEXT)
SRC           = aspire.cpp Buffer.cpp Customer.cpp DataSet.cpp Dish.cpp Global.cpp Matrix.cpp Normal.cpp Restaurant.cpp Stut.cpp Table.cpp ThreadPool.cpp util.cpp Vector.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

aspire$(OBJEXT): i2gmm.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) i2gmm.cpp

Buffer$(OBJEXT): Buffer.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Buffer.cpp

Customer$(OBJEXT): Customer.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Customer.cpp

DataSet$(OBJEXT): DataSet.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) DataSet.cpp

Dish$(OBJEXT): Dish.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Dish.cpp

Global$(OBJEXT): Global.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Global.cpp

Matrix$(OBJEXT): Matrix.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Matrix.cpp

Normal$(OBJEXT): Normal.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Normal.cpp

Restaurant$(OBJEXT): Restaurant.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Restaurant.cpp

Stut$(OBJEXT): Stut.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Stut.cpp

Table$(OBJEXT): Table.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Table.cpp

ThreadPool$(OBJEXT): ThreadPool.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ThreadPool.cpp

util$(OBJEXT): util.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) util.cpp

Vector$(OBJEXT): Vector.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Vector.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@$(TOUCH) $(DEPENDENCIES)

depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
